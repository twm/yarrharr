@import "../include.less";

.list-article {
    contain: strict;

    height: @bar_height;

    /* The line height relates to the above height calculation, which allows
     * for two lines of text. We must make sure that the line-height is
     * a static value, not based on the x-height of the font, since we don't
     * specify the font. */
    line-height: @bar_line_height;

    margin: 0 0 0.125rem 0;
}

.list-article-inner {
    height: @bar_height;
    max-width: var(--layout-max-width);
    margin: 0 auto;
    overflow: hidden;
}

.list-article-slider {
    display: flex;
    flex-flow: row nowrap;
    align-items: stretch;

    .outbound {
        .flat-button;
        &:hover { .flat-button-hover; }
        &:focus-visible { .flat-button-focus; }
        padding: ((2 * @button_border_width));
        flex: 1 1 100%;
        width: 100%;
        display: grid;
        // XXX: Using grid here is starting to look a little silly.
        grid-template-areas:
            "meta1"
            "meta2";
        grid-template-rows: 1fr 1fr;

        text-decoration: none;
        /* We set the color on the container to set the color of the ellipsis generated by text-overflow. */
        color: var(--quiet-text-color);

        .meta1 {
            grid-area: meta1;
            color: var(--quiet-text-color);
            text-transform: uppercase;
            font-size: smaller;
            // background: red;
        }
        .meta2 {
            grid-area: meta2;
            // background: blue;
        }
        .meta1,
        .meta2 {
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
        }
        .title {
            color: var(--text-color);
        }
        .snippet {
            color: var(--quiet-text-color);
            padding-left: 0.5rem;
        }
    }

    .read-toggle,
    .view-link {
        flex: 0 0 @bar_height;

        .flat-button;
        &:hover { .flat-button-hover; }
        &:focus-visible { .flat-button-focus; }
    }
    .read-toggle {
        // background: purple;
    }
    .view-link {
        // background: magenta;
    }

    .outbound-icon,
    .read-toggle,
    .view-link {
        font-size: @icon_size;
        display: flex;
        flex: row nowrap;
        align-items: center;
        justify-content: center;

        .icon {
            flex: 0 0 auto;
            // background: white;
            display: block;
            align-self: center;
            justify-self: center;
        }
    }

}
